@inject CrudComponentRouterService RouterService

@switch (RouteState)
{
    case RouterState.Search:
        @SearchComponent
        break;
    case RouterState.Create:
        @CreateComponent
        break;
    case RouterState.Delete:
        @DeleteComponent
        break;
    case RouterState.Edit:
        @EditComponent
        break;
}


@code {

    [Parameter]
    public RouterState RouteState { get; set; }

    [Parameter]
    public RenderFragment SearchComponent { get; set; }

    [Parameter]
    public RenderFragment EditComponent { get; set; }

    [Parameter]
    public RenderFragment DeleteComponent { get; set; }

    [Parameter]
    public RenderFragment CreateComponent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.RouterService.RegisterRouter(this);
    }

    public void Navigate(RouterState state)
    {
        this.RouteState = state;
        StateHasChanged();
    }

}